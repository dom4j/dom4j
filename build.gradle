apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'org.dom4j'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
    options.charSet = options.encoding
}

repositories {
    mavenCentral()
}

dependencies {

    implementation(
            'jaxen:jaxen:1.1.6',
            'javax.xml.stream:stax-api:1.0-2',
            'net.java.dev.msv:xsdlib:2013.6.1',
            'javax.xml.bind:jaxb-api:2.2.12',
            'pull-parser:pull-parser:2.1.10',
            'xpp3:xpp3:1.1.4c',
    )

    testImplementation(
            'org.testng:testng:6.8.21',

            'xerces:xercesImpl:2.11.0',
            'xalan:xalan:2.7.2',
    )
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'dom4j'
                description = 'flexible XML framework for Java'
                url = 'http://dom4j.github.io/'
                licenses {
                    license {
                        name = 'Plexus'
                        url = 'https://github.com/dom4j/dom4j/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        name = 'Filip JirsÃ¡k'
                        email = 'filip@jirsak.org'
                        url = 'https://github.com/FilipJirsak'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:dom4j/dom4j.git'
                    developerConnection = 'scm:git:git@github.com:dom4j/dom4j.git'
                    url = 'git@github.com:dom4j/dom4j.git'
                }

                withXml {
                    asNode().dependencies.dependency.findAll { xmlDep ->
                        xmlDep.appendNode('optional').value = 'true'
                    }
                }
            }
        }
    }
}

jar {
    manifest {
      attributes('Automatic-Module-Name': 'org.dom4j')
    }
}

test {
    useTestNG()
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

check.dependsOn 'jacocoTestReport'

if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
    publishing {
        repositories {
            maven {
                url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                authentication {
                    basic(BasicAuthentication)
                }
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }

//		mavenSnapshot{
//		url "https://oss.sonatype.org/content/repositories/snapshots/"
//			authentication(userName: ossrhUsername, password: ossrhPassword)
//		}
        }
    }
}

if (project.hasProperty('signing.keyId')) {
    signing {
        sign publishing.publications.mavenJava
    }
}
